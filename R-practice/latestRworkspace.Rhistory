age <- c(1,3,5,2,11,9,3,9,12,3)
weight <- c(4.4, 5.3, 7.2, 5.2, 8.5, 7.3, 6.0, 10.4, 10.2, 6.1)
mean(weight)
sd(weight)
cor(age, weight)
plot(age, weight)
demo()
demo(Hershey)
getwd()
ls()
options()
lm(mpg~wt, data=mtcars)
lmfit <- lm(mpg~wt, data=mtcars)
summary(lmfit)
plot(lmfit)
cook<-cooks.distance(lmfit)
plot(cook)
predict(lmfit, mynewdata)
?lm
help()
help.start()
install.packages("vcd")
help(package="vcd")
library(vcd)
help(Arthritis)
Arthritis
help(Arthritis)
example(Arthritis)
savehistory("chapter1")
clearhistory()
t <- c(2,4)
t
a <- (1, 2, 3, 4, 5, 6)
a <- c(1, 2, 3, 4, 5, 6)
a[c(2,4)]
a[3]
a[2:4]
a[-1:3]
studentGrades <- read.table("studentgrades.csv", header=TRUE, sep=",", row.names="StudentID")
studentGrades <- read.table("studentgrades.csv", header=TRUE, sep=",", row.names="StudentID")
studentGrades
studentGrades$11
studentGrades.First
studentGrades$First
str(studentgrades)
str(studentGrades)
studentGrades[2]
names(studentGrades)[2] <- "Last Name"
studentGrades[2]
names(studentGrades)[2] <- "Last Name"
str(studentGrades)
studentGrades$"Last Name"
studentGrades$Last.Name
str(studentGrades)
?str()
?factor()
View(studentGrades)
test <- factor(studentGrades$First, levels(1, 2, 3, 4), labels("Tom", "Jerry", "Kashia", "Caroline"))
test
test <- factor(studentGrades$First, levels = c(1, 2, 3, 4), labels = c("Tom", "Jerry", "Kashia", "Caroline"))
test
studentGrades$First <- factor(studentGrades$First, levels = c(1,2,3,4), labels = c("Tom", "Jerry", "Kashia", "Caroline"))
View(studentGrades)
studentGrades <- read.table(studentgrades.csv, header=TRUE, sep=",")
studentGrades <- read.table("studentgrades.csv"", header=TRUE, sep=",")
studentGrades <- read.table("studentgrades.csv", header=TRUE, sep=",")
str(studentGrades)
newStudentFrame <- data.frame(studentGrades, c(1,2,1,2))
str(newStudentFrame)
View(newStudentFrame)
newStudentFrame <- data.frame(studentGrades, gender=c(1,2,1,2))
View(newStudentFrame)
newStudentFrame$gender <- factor(newStudentFrame$gender, levels = c(1,2), labels = c("male", "female"))
View(newStudentFrame)
length(newStudentFrame$gender)
length(newStudentFrame)
dim(newStudentFrame)
newStudentFrame <- data.frame(newStudentFrame, row.names=newStudentFrame$StudentID)
View(newStudentFrame)
newStudentFrame <- read.table("studentgrades.csv", header=TRUE, sep=",", row.names="StudentID")
view(newStudentFrame)
View(newStudentFrame)
View(studentGrades)
str(newStudentFrame)
newStudentFrame
manager <- c(1,2,3,4,5)
date <- c("10/24/08", "10/28/08", "10/1/08", "10/12/08", "5/1/09")
country <- c("US", "US", "UK", "UK", "UK")
gender <- c("M", "F", "F", "M", "F")
age <- (32, 45, 25, 39, 99)
age <- (32, 45, 25, 39, 99)
age <- c(32, 45, 25, 39, 99)
q1 <- (5,3,3,3,2)
q1 <- c(5,3,3,3,2)
q2 <- c(4,5,5,3,2)
q3 <- c(5,2,5, 4, 1)
q4 <- c(5,5,5, NA, 2)
q5 <- c(5,5,2 NA, 1)
q5 <- c(5,5,2, NA, 1)
leadership <- data.frame(manager, date, country, gender, age, q1, q2, q3, q4, q5, stringAsFactors=FALSE)
mydata <- data.frame(x1 = c(2,2, 6, 4), x2 = c(3,4,2,8))
mydata <- transform(mydata, sumx = x1 + x2, meanx = (x1 + x2)/2)
mydata
names(leadership)
leadership
leadership <- data.frame(manager, date, country, gender, age, q1, q2, q3, q4, q5, stringsAsFactors=FALSE)
names(leadership)
leadership
names(leadership)[2] <- "Test Date"
leadership
x <- pretty(c(-3,3), 30)
y <- dnorm(x)
plot(x, y, type = "1", xlab="Normal Deviate", ylab = "Density", yaxs = "i")
x
y
plot(x, y, )
plot(x, y
,
type = "1",
xlab = "Normal Deviate",
ylab = "Density",
yaxs = "i"
)
cwd()
pwd()
cwd
getwd()
attach(mtcars)
plot(wt, mpg)
plot(mtcars)
plot(mtcars)
x <- pretty(c(-3, 3), 30)
y <- dnorm(x)
plot(x, y, type = "1", xlab = "Normal Deviate", ylab = "Density", yaxs = "i")
plot(x, y, type = "l", xlab = "Normal Deviate", ylab = "Density", yaxs = "i")
pnorm(1.96)
sqrt(729)
b <- 1947.0
b
b - 0.1
b <- 1947.1
b
as.character(b)
numVec <- c(1:6)
numVec
class(numVec)
a <- c(1, "a", 2, "b")
a
class(a)
charTest <- character(26)
charTest
charTest[1] <- "a"
charTest
length(charTest)
friends <- c("Bryan", "Anuj", "Caroline", "Adrian", "Eric", "Nick")
sortedFriends <- order(friends)
sortedFriends
friends
sortedFriends <- friends[order(friends)]
sortedFriends
negSortedFriends <- friends[order(-friends)]
class(friends)
friends[1]
friends[-1]
names(friends)
names(friends) <- "Friends"
names(friends)
friends
sort(friends)
rev(order(friends))
negSortedFriends <- friends[rev(order(friends))]
negSortedFriends
val <- c(1,2, NA, 4)
class(val)
boolTest <- is.na(val)
boolTest
val[boolTest]
na.omit(val)
newVal <- na.omit(val)
newVal
class(newVal)
newVal[1]
newVal
otherVal[!is.na(val)]
otherVal <- val[!is.na(val)]
otherVal
!is.na(val)
class(!is.na(val))
is.vector(!is.na(val))
c(TRUE, TRUE, FALSE, TRUE)
today <- Sys.Date()
dob <- as.Date("1990-07-14")
difftime(today, dob, unit="weeks")
format(dob, format="%A")
?sample
samples <- sample(c(1:100), 50, replace=TRUE)
class(samples)
library(MASS)
options(digits=3)
?options
options()
set.seed(1234)
mean <- c(230.7, 146.7, 3.6)
sigma <- matrix(c(15360.8, 6721.2, -47.1, 6721.2, 4700.9, -16.5, -47.1, -16.5, 0.3), nrows=3, ncol=3)
sigma <- matrix(c(15360.8, 6721.2, -47.1, 6721.2, 4700.9, -16.5, -47.1, -16.5, 0.3), nrow=3, ncol=3)
sigma
mydata <- mvrnorm(500, mean, sigma)
head(mydata, n=10)
names(mydata) <- c("y", "x1", "x2")
head(mydata, n=10)
dim(mydata)
mydata <- as.data.frame(mydata)
testdata <- data.frame(mvrnorm(500, mean, sigma))
str(testdata)
str(mydata)
names(mydata) <- c("y", "x1", "x2")
head(mydata)
head(mydata, n=10)
head(testdata, n=10)
library(MASS)
options(digits=3)
set.seed(1234)
mean <- c(230.7, 146.7, 3.6)
sigma <- matrix(15360.8, 6721.2, -47.1, 6721.2, 4700.9, -16.5, -47.1, -16.5, 0.3)
sigma <- matrix(c(15360.8, 6721.2, -47.1, 6721.2, 4700.9, -16.5, -47.1, -16.5, 0.3), nrow=3, ncol=3)
mydata <- mvrnorm(500, mean, sigma)
set.seed(1234)
testdata <- mvrnorm(500, mean, sigma)
set.seed(1234)
testdata <- data.frame(mvrnorm(500, mean, sigma))
mydata <- as.data.frame(mydata)
str(testdata)
str(mydata)
x <- c(1:8)
length(x)
x
n <- length(x)
meanx <- sum(x)/n
css <- sum( (x-meanx)^2)
css
meanx
sum(x^2) - 2*mean*sum(x) + n*meanx^2
sum(x^2)
n*mean^2
mean
sum(x^2) - 2*meanx*sum(x) + n*meanx^2
sdx <- sqrt(css/(n-1))
sdx
sum(x)*sum(x)
css
sum(x^2) - (1/n)*(sum(x)^2)
?runif
c <- matrix(runif(12), nrows=3)
c <- matrix(runif(12), nrow=3)
c
mean(c)
col1 <- c(,2)
c
col1 <- c[],2]
col1 <- c[,2]
col1
col1 <- c[,1]
mean(col1)
mydata <- matrix(runif(30), nrow=6)
mydata
apply(mydata, 1, mean)
mean(mydata[,1])
mean(mydata[1,])
mean(mydata[2,])
?quantile
options(digits=2)
students <- read.table("studentNames.csv", sep=", ")
students <- read.table(studentNames.csv, sep=", ")
students <- read.table("studentNames.csv", sep=",")
students <- read.table("studentNames.csv", sep=",")
students <- read.table("studentNames.csv", sep=",")
students
students
students <- read.table("studentNames.csv", sep=",")
students
class(students)
students <- as.character(students)
class(students)
students
Math <- c(502, 600, 412, 358, 495, 512, 410, 625, 573, 522)
Science <- c(95, 99, 80, 82, 75, 85, 80, 95, 89, 86)
English <- c(25, 22, 18, 15, 20, 28, 15, 30, 27, 18)
roster <- data.frame(Math, Science, English)
z <- scale(roster)
z
score <- apply(z, 1, mean)
score
y <- quantile(score, c(.8, .6, .4, .2))
y
y <- quantile(score, seq(0, 1, 0.25))
y
y <- quantile(score, seq(0, 1, 0.05))
y
students <- read.table("studentNames.csv", sep=",", header = FALSE)
students
str(students)
students$V1
students[[1]]
students <- read.table("studentNames.csv", sep=",", header = FALSE)
students <- read.table("studentNames.csv", sep=",", header = FALSE)
students
students[1]
students[1][1]
students[[1]]
students
dim(students)
is.vector(students)
class(students())
class(students
)
students[1,2]
students[1,1]
students[2]
students[1]
students$V1
students$V1[1]
studentNames <- students$V1
class(studentNames)
as.vector(studentNames)
studentNames <- as.vector(studentNames)
is.vector(studentNames)
studentNames[1]
studentNames[2]
name <- strsplit(studentNames, " ")
name
sapply(name, "[", 2)
?sapply
sapply(name, "]", 2)
roster
firstname <- sapply(name, "[", 1)
lastname <- sapply(name, "[", 2)
firstname, lastname
firstname
lastname
roster <- cbind(firstname, lastname, roster)
roster
roster[order(lastname)]
roster[order(roster$lastname)]
roster[order(roster$lastname),]
roster[order(roster$lastname, roster$firstname),]
myvars <- c("mpg", "hp", "wt")
head(mtcars[myvars])
head(mtcars)
head(mtcars[myvars])
summary(mtcars[myvars])
options(digits=3)
summary(mtcars[myvars])
require(skew_kurt_func.R)
require("skew_kurt_func.R")
sapply(mtcars[myvars], mystats)
source("skew_kurt_func.R")
sapply(mtcars[myvars], mystats)
attach(mtcars)
aggdata <- aggregate(mtcars, by=list(cyl, gear), FUN=mean, na.rm=TRUE)
aggdata
aggdata[!c(cyl, gear)]
aggdata(!c("cyl", "gear"))
aggdata
aggdata[!c("cyl", "gear")]
aggdata[c(1,2, 3, 4, 5, 6, 7,8, 9, 10)]
dstats <- function(x)sapply(x, mystats)
by(mtcars[myvars], mtcars$am, dstats)
library(vcd)
head(Arthritis)
table(Improved)
mytable <- with(Arthritis, table(Improved))
mytable
prop.table(mytable)
xtabs(~ Treatment + Improved, data=Arthritis)
prop.table(mytable, 1)
margin.table(mytable, 1)
mytable
mytable <- xtabs(~ Treatment + Improved, data=Arthritis)
margin.table(mytable, 1)
margin.table(mytable, 2)
prop.table(mytable, 1)
prop.table(mytable, 2)
options(digits=3)
prop.table(mytable, 2)
options(digits=5)
prop.table(mytable, 2)
prop.table(mytable, 1)
attach(mtcars)
detach(mtcars)
detach(mtcars)
attach(mtcars)
fit <- lm(mpg ~ (hp + wt)^2, data=mtcars)
summary(fit)
library(effects)
install.packages("effects"0)
install.packages("effects")
library(effects)
plot(effect("hp:wt", fit,,list(wt=c(2.2, 3.2, 4.2)), multiline=TRUE))
plot(effect("hp:wt", fit,,list(wt=c(2.2, 3.2, 4.2))), multiline=TRUE)
states <- as.data.frame(state.x77[, c("Murder", "Population", "Illiteracy", "Income", "Frost")])
fit <- ln(Muder ~ Population + Illiteracy + Income + Frost, data=states)
fit <- lm(Muder ~ Population + Illiteracy + Income + Frost, data=states)
fit <- lm(Murder ~ Population + Illiteracy + Income + Frost, data=states)
confint(fit)
fit <- lm(weight ~ height, data=women)
par(mfrow=c(2.2))
par(mfrow=c(2,2))
plot(fit)
?par()
plot(fit)
fit2 <- lm(weight ~ height + I(height)^2, data=women)
plot(fit2)
par(mfrow=c(2,2))
plot(fit2)
plot(fit2)
plot(fit)
plot(fit2)
plot(fit2)
fit2 <- lm(weight ~ height + I(height^2), data=women
)
par(mfrow=c(2,2))
plot(fit2)
newfit <- lm(weight ~ height + I(height^2), data=women[-c(13,15),])
plot(newfit)
fit <- lm(Murder ~ Population + Illiteracy + Income + Frost, data=states)
par(mfrow, c(2,2))
par(mfrow=c(2,2))
plot(fit)
qqPlot(fit, labels=row.names(states), id.method="identify", simulate=TRUE, main="Q-Q Plot")
library(car)
install.packages("car")
install.packages("car")
library(car)
qqPlot(fit, labels = row.names(states), id.method="identify", simulate = TRUE, main= "Q-Q Plot")
states["Nevada",]
fitted(fit)["Nevada"]
savehistory("2016_07_23" = ".Rhistory")
savehistory("2016_07_23", file= ".Rhistory")
savehistory("latestRworkspace.Rhistory")
