ls
c(1,2,3,4)
c(1,2,3,4) ^ c(1,2,3,4)
source("simple_fn_1.R")
tmpFn1(c(1:4))
tmpFn2(c(1:4))
rep(1, 10)
length(rep(1,10))
c(1 rep(2, 10))
c(1,
rep(2, 10))
source("simple_fn_1.R")
tmpFn(2, 5)
tmpFn3(2,5)
is.integer(5)
?is.integer
source("simple_fn_1.R")
tmpFn3(2,5)
?round
round(5)
round(5, digits=2)
length(round(4.9, digits=2))
round(5.1)
round(5.1) < 5
round(5.9)
floor(5.9)
floor(5.9) < 5
is.integer(5.1)
is.integer(5)
floor(6) <= 6
floor(6.1) <= 6
floor(6.1) >= 6.1
floor(6) >= 6
floor(4.9) >= 4.9
floor(4) >= 4
source("simple_fn_1.R")
tmpFn3(3, 5)
tmpFn3(3, 5.1)
tmpFn3(3, -5)
tmpFn3(3, 5)
ex <- c(1:5)
(3 ^ ex)/ ex
sum((3 ^ ex)/ ex)
test <- c(1:5, 6:1)
test
?apply
lapply?
a
?lapply?
a
?lapply
xVec <- seq(-3, 3, 0.5)
xVec
xVec[xVec < 0]
tmpVec <- xVec[xVec <0]
newVec <- tmpVec ^ 2 + 2 * tmpVec + 3
newVec
tmpVec <- xVec[(xVec >= 0) & (xVec<2)]
tmpVec
source(simple_fn_3)
source("simple_fn_3")
source("simple_fn_3.R")
xVec
tmpFn(xVec)
source("simple_fn_3.R")
tmpFn(xVec)
plot(tmpFn(xVec))
plot(xVec, tmpFn(xVec))
opar(no.readonly=T)
par(no.readonly=T)
par(lty=2, pch=17)
plot(xVec, tmpFn(xVec))
plot(xVec, tmpFn(xVec), type="b")
A <- matrix(c(1,5,-2, 1, 2, -1, 3, 6, -3), nrow=3)
A
(A%% 2)==1
A[ A%%2 == 1]
A[ A%%2 == 1 ] <- A[A%%2 == 1] * 2
A
apply(A, MARGIN=c(1,2), function(x){if(x%%2 == 1) x*2})
A
apply(A, MARGIN=c(1,2), function(x){if(x%%2 == 1) return (x*2)})
A
A <- matrix(c(1, 5, -2, 1, 2, -1, 3, 6, -3), nrow=3)
A
apply(A, MARGIN=c(1,2), function(x){if(x%%2 == 1) return (x*2)})
apply(A, MARGIN=c(1,2), function(x){if(x%%2 == 1) {return (x*2)} else {return (x)})
apply(A, MARGIN=c(1,2), function(x){if(x%%2 == 1) {return (x*2)} else {return (x)}})
A
